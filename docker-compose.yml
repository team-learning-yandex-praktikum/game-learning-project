version: "3.9"

services:
    client:
        container_name: prakticum-client
        image: prakticum-client
        build:
            context: .
            dockerfile: Dockerfile.client
            args:
              CLIENT_PORT: ${CLIENT_PORT}
        restart: always
        env_file:
            - ./.env
        depends_on:
            - server
        ports:
            - "${CLIENT_PORT}:${CLIENT_PORT}"
        networks:
            - awesome

    server:
        container_name: prakticum-server
        image: prackicum-server
        build:
            context: .
            dockerfile: Dockerfile.server
            args:
              SERVER_PORT: ${SERVER_PORT}
        restart: always
        ports:
            - "${SERVER_PORT}:${SERVER_PORT}"
        env_file:
            - ./.env
        depends_on:
            postgres:
                condition: service_healthy
        networks:
            - awesome

    postgres:
        image: postgres:14
        environment:
            POSTGRES_USER: "${DB_USER}"
            POSTGRES_PASSWORD: "${DB_PASSWORD}"
            POSTGRES_NAME: "${DB_NAME}"
            POSTGRES_HOST: "${DB_HOST}"
        healthcheck:
            test: ["CMD-SHELL", "sh -c 'pg_isready -U ${DB_USER} -d ${DB_NAME}'"]
            interval: 10s
            timeout: 3s
            retries: 3
        ports:
            - "${DB_PORT}:${DB_PORT}"
        volumes:
            - ./packages/server/pgdata:/var/lib/postgresql/data
#              Когда добавятся миграции раскомментировать -> подправить
#            - ./packages/server/migrations:/docker-entrypoint-initdb.d
        networks:
            - awesome

    pgadmin:
        container_name: pgadmin
        image: dpage/pgadmin4:4.18
        restart: always
        env_file:
            - ./.env
        ports:
            - "${PGADMIN_LISTEN_PORT}:${PGADMIN_LISTEN_PORT}"
        volumes:
            - ./packages/server/pgadmin-data:/var/lib/pgadmin
        depends_on:
            postgres:
                condition: service_healthy
        networks:
            - awesome

networks:
    awesome:
        driver: bridge
